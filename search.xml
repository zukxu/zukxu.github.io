<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/082416107.html"/>
      <url>/2020/082416107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IO流</title>
      <link href="/2020/05147580.html"/>
      <url>/2020/05147580.html</url>
      
        <content type="html"><![CDATA[<h1 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h1><h2 id=""><a href="#" class="headerlink" title=""></a><img src="C:/Users/zukxu/Desktop/io.jpg" alt="io.jpg"></h2><blockquote><p>IO流用来处理设备之间的数据传输，如上传文件和下载文件,文件的读取写入等操作</p></blockquote><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>Java对数据的操作是通过流的方式,Java用于操作流的对象都在IO包中</p></blockquote><h2 id="按照数据流向："><a href="#按照数据流向：" class="headerlink" title="按照数据流向："></a>按照数据流向：</h2><ul><li>输入流  读入数据   从操作系统上读入文件到内存中</li><li>输出流  写出数据   就是将文件从编译器中编写到操作系统上<h2 id="按照数据类型："><a href="#按照数据类型：" class="headerlink" title="按照数据类型："></a>按照数据类型：</h2></li><li>字节流     由于我们的文件存储的基本单元都是字节，所以这个很早出现了</li><li>字符流     为了方便处理某些数据，则出现字符流</li></ul><h2 id="使用方式："><a href="#使用方式：" class="headerlink" title="使用方式："></a>使用方式：</h2><p>如果数据所在的文件通过windows自带的记事本打开并能读懂里面的内容，就用字符流，否则用字节流。如果不知道是什么文件，就用字节流。</p><h2 id="字节流："><a href="#字节流：" class="headerlink" title="字节流："></a>字节流：</h2><ul><li>字节输入流： <blockquote><p>InputStream<br>FileInputStream </p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//InputStream是最基础的字节输入流的接口</span></span><br><span class="line"><span class="comment">//FileInputStream是最基础的文件操作字节输入流对象</span></span><br><span class="line"><span class="comment">/*使用try-catch进行捕获异常</span></span><br><span class="line"><span class="comment">1、声明输入流对象</span></span><br><span class="line"><span class="comment">2、定义每次读入的字节数大小</span></span><br><span class="line"><span class="comment">3、每次读取一个字节数组的大小，读取的内容都在字节数组中，直到字节数组返回的大小等于-1，则表示已经读取完毕</span></span><br><span class="line"><span class="comment">4、必须关闭输入流</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="keyword">try</span>(FileInputStream fis = <span class="keyword">new</span> FileInputStream(READ_FILE_PATH))&#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> (fis.read(bytes) != -<span class="number">1</span>) &#123;</span><br><span class="line">                String str = <span class="keyword">new</span> String(bytes);</span><br><span class="line">                System.out.println(str);</span><br><span class="line">            &#125;</span><br><span class="line">            fis.close();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>字节缓冲输入流：    <blockquote><p>BufferedInputStream<br>成员方法：   </p><blockquote><p>int read()  一次读取一个字节<br>int read(byte [] bytes) 一次读取一个字节数组</p></blockquote></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(READ_FILE_PATH))) &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> (bis.read(bytes) != -<span class="number">1</span>) &#123;</span><br><span class="line">                String str = <span class="keyword">new</span> String(bytes);</span><br><span class="line">                System.out.println(str);</span><br><span class="line">            &#125;</span><br><span class="line">            bis.close();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>字节输出流： <blockquote><p>OutputStream<br>FileOutStream</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*输出流的构造方法可以定义是否续写</span></span><br><span class="line"><span class="comment">即new FileOutputStream(WRITE_FILE_PATH,true);支持续写，不会覆盖之前文件中的内容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//定义当前系统下的换行符</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINE_SEPARATOR = System.getProperty(<span class="string">&quot;line.separator&quot;</span>);</span><br><span class="line">  <span class="keyword">try</span> (FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(WRITE_FILE_PATH)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                String s = <span class="string">&quot;HELLO&quot;</span> + (<span class="keyword">int</span>) (Math.random() * <span class="number">100</span> + <span class="number">1</span>) + LINE_SEPARATOR;</span><br><span class="line">                fos.write(s.getBytes());</span><br><span class="line">            &#125;</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>字节缓冲输出流：   <blockquote><p>BufferedOutputStream</p><blockquote><p>成员方法：</p><blockquote><p>void write()    一次写入一个字节<br>void write(byte [] bytes , int off , int len) 一次写入一个字节数组，从off开始，长度为len</p></blockquote></blockquote></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">缓冲输出流必须使用flush()方法将缓冲区中的数据强制输出完</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">try</span> (BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(WRITE_FILE_PATH))) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">10000000</span> ; i++) &#123;</span><br><span class="line">                String str = i + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                bos.write(str.getBytes(Charset.forName(<span class="string">&quot;UTF-8&quot;</span>)));</span><br><span class="line">                bos.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>缓冲流仅仅只是对字节流的优化，所以最好的定义方式是传递一个输入流/输出流对象</p></blockquote><ul><li>字节数组输入流/输出流<blockquote><p>ByteArrayInputStream</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">readFromArray</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(bytes);</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">while</span> ((tmp = bais.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            sb.append(Integer.toHexString(tmp));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readMarkAndReset</span><span class="params">(<span class="keyword">byte</span>[] bytes,<span class="keyword">int</span> mark)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(bytes);</span><br><span class="line">        bais.mark(mark);</span><br><span class="line"></span><br><span class="line">        bais.skip(mark + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">while</span> ((tmp = bais.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            sb.append(Integer.toHexString(tmp));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;越过标记后的字符串&quot;</span>);</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line"></span><br><span class="line">        bais.reset();</span><br><span class="line">        sb.setLength(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        <span class="keyword">while</span> ((m = bais.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            sb.append(Integer.toHexString(m));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;重置之后的字符串&quot;</span>);</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>ByteArrayOutputStream</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (InputStream is = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D://read_file.txt&quot;</span>)) &#123;</span><br><span class="line">            ByteArrayOutputStream output = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> (is.read(bytes) != -<span class="number">1</span>) &#123;</span><br><span class="line">                output.write(bytes);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            String data = output.toString(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            System.out.println(data);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="字符流（转换流）："><a href="#字符流（转换流）：" class="headerlink" title="字符流（转换流）："></a>字符流（转换流）：</h2><blockquote><p>字符流 = 字节流 + 编码集</p></blockquote><ul><li><p>字符输入流： </p></li><li><blockquote><p>Reader<br>FileReader</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1、定义FileReader()对象</span></span><br><span class="line"><span class="comment">2、定义字符数组</span></span><br><span class="line"><span class="comment">3、读取数组大小的内容</span></span><br><span class="line"><span class="comment">4、返回的读取长度为-1表示读完</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">try</span> (FileReader reader = <span class="keyword">new</span> FileReader(READ_FILE_PATH)) &#123;</span><br><span class="line">            <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> (reader.read(chars) != -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(chars);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>InputStreamReader</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">定义InputStreamReader对象，传递一个FileInputStream对象作为参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="keyword">try</span> (Reader reader = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(READ_FILE_PATH))) &#123;</span><br><span class="line">            <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> (reader.read(chars) != -<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.print(<span class="keyword">new</span> String(chars));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>字符缓冲输入流：<blockquote><p>BufferedReader:</p><blockquote><p>特殊用法：</p><blockquote><p>String readLine() 一次读取一行数据，但不包括换行符【\n】</p></blockquote></blockquote></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>(BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(READ_FILE_PATH)))&#123;</span><br><span class="line">            String str;</span><br><span class="line">            <span class="keyword">while</span> ((str = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>字符输出流：  <blockquote><p>Writer<br>FileWriter</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (FileWriter writer = <span class="keyword">new</span> FileWriter(WRITE_FILE_PATH)) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt; <span class="number">1000000</span>;i++) &#123;</span><br><span class="line">               writer.write(<span class="string">&quot;我是byhieg&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>OutputStreamWriter</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (Writer writer = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(WRITE_FILE_PATH))) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">100</span>;i++) &#123;</span><br><span class="line">                writer.write(<span class="string">&quot;我是中国人&quot;</span> +Math.random()*<span class="number">100</span>+<span class="number">1</span>);</span><br><span class="line">                writer.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;输出流&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>字符缓冲输出流：<blockquote><p>BufferedWriter:</p><blockquote><p>特殊用法:</p><blockquote><p>void newLine()  写入一个行分隔符【\n】，适用于各个系统</p></blockquote></blockquote></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(READ_FILE_PATH))) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ;i &lt; <span class="number">100000</span>;i++) &#123;</span><br><span class="line">                String str = <span class="string">&quot;asd&quot;</span>;</span><br><span class="line">                bw.write(str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> io流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔-兴之所至</title>
      <link href="/2020/041823895.html"/>
      <url>/2020/041823895.html</url>
      
        <content type="html"><![CDATA[<hr><img src="https://cdn.jsdelivr.net/gh/zukxu/pictures/img/cover(8).jpeg" alt=""/><p>我爱的人朝我走来，我的心瞬间便融化了</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日物语</title>
      <link href="/2020/04165807.html"/>
      <url>/2020/04165807.html</url>
      
        <content type="html"><![CDATA[<hr><p>###【平日里的兴致】</p><blockquote><p>在过去的这一个月里，一直到今天都是在不停的加班和准备加班中度过，感觉身体都被掏空了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心情 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo搭建图床</title>
      <link href="/2020/041219408.html"/>
      <url>/2020/041219408.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="GitHub-jsDelivr-PicGo-Imagine-打造稳定快速、高效免费图床"><a href="#GitHub-jsDelivr-PicGo-Imagine-打造稳定快速、高效免费图床" class="headerlink" title="GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床"></a>GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>为什么要使用图床呢？</p></blockquote><p>因为在不同平台发布同一篇文章的时候，最一个痛苦的点就是，图片存储问题，各个平台的文件存储方式各不相同，无法直接 <code>Ctrl + C</code> 的方式一键搞定，为了解决这个问题，使用 <code>MarkDown + 图床</code> 的方式进行文章的写作，将图片放到一个统一的地方，在文章中引入图片外链。<br>所谓图床，就是将图片储存到第三方静态资源库中，其返回给你一个 URL 进行获取图片。<code>MarkDown</code> 支持使用 URL 的方式显示图片，我想这也是程序员为什么对其偏爱的原因之一。<br>作为程序员，你会发现，现在很多论坛和社区都开始支持使用 <code>MarkDown</code>，如果你没使用图床的情况下，你分享同一篇文章，你要在不同的平台，各自重新编辑排版一遍和上传图片一次。<br>有了图床，情况就不一样了，<code>Ctrl+C</code> 的方式就搞定了，根本不用再 Check 文章内容一遍。</p><blockquote><p>图床的选择？</p></blockquote><ol><li><code>微博图床</code>：以前用的人比较多，从 2019 年 4 月开始开启了防盗链，凉凉</li><li><code>SM.MS</code>：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧</li><li><code>其他小众图床</code>：随时有挂掉的风险</li><li><code>Imgur 等国外图床</code>：国内访问速度太慢，随时有被墙的风险</li><li><code>大厂储存服务</code>：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，操作繁琐，又是实名认证又是域名备案的，麻烦，而且还要花钱（有钱又不怕麻烦的当我没说）</li><li><code>GitHub 图床</code>：免费，但是国内访问速度慢（不过没关系，利用 <code>jsDelivr</code> 提供的免费的 CDN 加速 速度足够了）</li></ol><h2 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h2><ol><li>新建 GitHub 仓库</li><li>生成一个 Token</li><li>配置 PicGo 并使用 jsdelivr 作为 CDN 加速</li><li>使用 Imagine 进行图片压缩</li><li>上传图片到 PicGo 并使用图床</li></ol><h2 id="新建-GitHub-仓库"><a href="#新建-GitHub-仓库" class="headerlink" title="新建 GitHub 仓库"></a>新建 GitHub 仓库</h2><ul><li>登录/注册 GitHub</li><li>新建一个仓库，填写好仓库名</li><li>仓库描述</li><li>将权限设置成 <code>public</code></li><li>根据需求选择是否为仓库初始化一个 <code>README.md</code> 描述文件</li></ul><p><img src="http://s1.wailian.download/2020/04/12/image-20200412004849759.png" alt="image-20200412004849759"></p><p><strong>新建 GitHub 仓库</strong></p><h2 id="生成一个-Token"><a href="#生成一个-Token" class="headerlink" title="生成一个 Token"></a>生成一个 Token</h2><ol><li>点击用户头像 -&gt; 选择 <code>Settings</code></li></ol><p><img src="http://s1.wailian.download/2020/04/12/image-20200412005021718.png" alt="image-20200412005021718"></p><p><strong>Settings</strong></p><ol><li>点击 <code>Developer settings</code></li></ol><p><img src="http://s1.wailian.download/2020/04/12/image-20200412005102702.png" alt="image-20200412005102702"></p><p><strong>Developer settings</strong></p><ol><li>点击 <code>Personal access tokens</code></li></ol><p><img src="http://s1.wailian.download/2020/04/12/image-20200412005135768.png" alt="image-20200412005135768"></p><p><strong>Personal access tokens</strong></p><ol><li>点击 <code>Generate new token</code></li></ol><p><strong>Generate new token</strong></p><ol><li>填写 <code>Token</code> 描述，勾选 <code>repo</code>，然后点击 <code>Generate token</code> 生成一个 <code>Token</code></li></ol><p><img src="http://s1.wailian.download/2020/04/12/image-20200412005252156.png" alt="image-20200412005252156"></p><p><strong>填写Token 描述</strong></p><p><strong>填写 Token 描述</strong></p><ol><li>获取 <code>Token</code> 密钥</li></ol><blockquote><p>注意这个 Token 只会显示一次，自己先保存下来，或者等后面配置好 PicGo 后再关闭此网页</p></blockquote><p><strong>获取 Token 密钥</strong></p><p><img src="http://s1.wailian.download/2020/04/12/image-20200412005406940.png" alt="image-20200412005406940"></p><h2 id="配置-PicGo-并使用-jsdelivr-作为-CDN-加速"><a href="#配置-PicGo-并使用-jsdelivr-作为-CDN-加速" class="headerlink" title="配置 PicGo 并使用 jsdelivr 作为 CDN 加速"></a>配置 PicGo 并使用 jsdelivr 作为 CDN 加速</h2><p>前往下载 <a href="https://github.com/Molunerfinn/picgo/releases">PicGo</a>（<a href="https://github.com/Molunerfinn/picgo/releases">点击下载</a>），安装好后开始配置图床</p><ul><li>设定仓库名：按照 <code>用户名/图床仓库名</code> 的格式填写</li><li>设定分支名：<code>master</code></li><li>设定 Token：粘贴之前生成的 <code>Token</code></li><li>指定存储路径：填写想要储存的路径，如 <code>img/</code>，这样就会在仓库下创建一个名为 <code>img</code> 的文件夹，图片将会储存在此文件夹中</li><li>设定自定义域名：它的的作用是，在图片上传后，PicGo 会按照<code>自定义域名+上传的图片名</code>的方式生成访问链接，放到粘贴板上，因为我们要使用 <code>jsDelivr</code> 加速访问，所以可以设置为<code>https://cdn.jsdelivr.net/gh/用户名/图床仓库名</code></li></ul><p><img src="http://s1.wailian.download/2020/04/12/image-20200412005436071.png" alt="image-20200412005436071"></p><p><strong>配置 PicGo</strong></p><p><strong>text</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Q：什么是 jsdelivr ?</span><br><span class="line"></span><br><span class="line">A：jsDelivr 为开发者提供免费公共 CDN 加速服务</span><br></pre></td></tr></table></figure><h2 id="使用-Imagine-进行图片压缩"><a href="#使用-Imagine-进行图片压缩" class="headerlink" title="使用 Imagine 进行图片压缩"></a>使用 Imagine 进行图片压缩</h2><p>通常情况下，图片大小都是超过 200KB 的，所以网页加载的时候会特别慢，一般我们会对图片进行压缩，这里我推荐 <a href="https://github.com/meowtec/Imagine/releases">Imagine</a>（<a href="https://github.com/meowtec/Imagine/releases">点击下载</a>） 支持全平台。</p><p><strong>使用 Imagine 进行图片压缩</strong></p><blockquote><p>Imagine 采用的是有损压缩，介意的可以忽略这一步</p></blockquote><p>顺便推荐一个无损压缩的网站：<a href="https://tinypng.com/">https://tinypng.com/</a></p><h2 id="上传图片到-PicGo-并使用图床"><a href="#上传图片到-PicGo-并使用图床" class="headerlink" title="上传图片到 PicGo 并使用图床"></a>上传图片到 PicGo 并使用图床</h2><p>配置好 <code>PicGo</code> 后，我们就可以进行高效创作了，将<code>压缩后的图片</code>拖拽到<code>上传区</code>，将会自动上传并复制<code>访问链接</code>，将链接粘贴到博文中就行了，访问速度杠杠的</p><p>此外 <code>PicGo</code> 还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，<code>PicGo</code> 还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！</p><hr><center><font face="楷体" size=4>【每日一话】</font></center>> 『 <font face="华文行楷" size=6>明明喜欢，却要装作无所事事，等到已从身边离去，而来追悔莫及。  </font>』<p align="right"><font face="方正舒体">—— 「丁先生」</font></p>*  * *<center><font face="楷体" size=4>【每日一图】</font></center><img src="http://s1.wailian.download/2020/04/11/cover-16.png" alt="每日一图"/><p><strong>感谢您的阅读！</strong><br><em><a href="https://hitokoto.cn/" title="Hitokoto">一言</a></em></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日心情</title>
      <link href="/2020/041162739.html"/>
      <url>/2020/041162739.html</url>
      
        <content type="html"><![CDATA[<hr><h3 id="雨后朦胧月"><a href="#雨后朦胧月" class="headerlink" title="雨后朦胧月"></a>雨后朦胧月</h3><p>七月既望，清雨眠，一缕愁绪，一丝苦闷。若问闲情几许，一场微风十里;如晓睡意几何，一习雨露通明。倦身不敌热暑，乘凉以解疲惫，困意朦胧千里，怎知雷动万钧，雨夜不畅，梦在惊醒时……</p><p>风，清冷。云，密集。雨，冰凉。一切都开始销声匿迹，一切都变得暗淡无光，一切都呈现死神的气息……只剩一团微火，忽明忽灭，悄悄地燃尽灰色的记忆，化成青烟，化成尘埃，化成空气。风愈渐大了，云层慢慢地压了过来，苍穹好像被一双手揉成了一块灰幕，灰蒙蒙一片遮住了视线，天忍不住流了泪，因为他懂我的心情，懂我不敢对你说出的酸楚，懂我一个人静依窗台的孤独。风雨短暂的缠绵，宛若昙花倏然而逝，终是与大地相融，淌在脸上的雨水些许冰凉，闭上眼，不知不觉就陷入了沉思，纵使相逢片刻，回神后我却感觉过了一整个夏日。也许是被这阴沉的气息吓住，也许是因为早已步入睡梦当中，一切归于平静，无声中，渐渐有了夜的气息，黑暗的影子，和月的轮廓……</p><p>月，朦胧。窗，寂寥。树，沉默。黑暗中的神秘，变得越来越深沉，气氛如此安静，一切都比过白天的空闷……风一阵一阵，轻轻地吹散云层，也拂走了眼前的阴霾。月悬在窗前，孤独地从东向西行去，依稀可见那泫然而泣后泛着的暗淡的泪光，不知是否倦了，累了，低眉惙怛伤悴，却又不知如何遮掩，仿佛知道我心底暗藏一抹难以抚平的伤痕，让我尤想为其拭尽那两行泪水，满脸愁容，不禁令人心疼。墙边仅有的一棵桂树，盼了八年，等的花未开，等花的人已不在。窗外的树影显得有些单薄，而屋内的灯格外昏暗，里面也不曾挂过一帘，只有月光一片，洒落窗弦。虫鸣声不停地打断看月的心绪，心中烦乱，百感交集，月下的人，有谁懂得他的落默?是谁，让我如此牵肠挂肚?是谁，让我如此心神不宁?又是谁，让我在征途中走出迷茫?月光扰乱心神，我该如何遗忘你的倾城?</p><p>雨后的明月触及我的心声，许久的伤痕渐渐让我明白：愁，忧伤，都是年华。爱，喜欢，都是生活。悲伤与否，一切都如逝水东流;快乐与否，所有都若落花碾尘。抓住，是最不想做的事;失去，是最不能做的事。如果你还有时间，就好好珍惜眼前的一切……爱在离别时，别落了伤心泪。</p><p>雨后夜，风儿依在，月，依旧朦胧……</p><hr><center><font face="楷体" size=4>【每日一话】</font></center><font face="华文行楷" size=6>你一直相信的事，也让我相信吧。活着，是件美好的事。 </font><font face="方正舒体">—— By Angle Beats</font><hr><center><font face="楷体" size=4>【每日一图】</font></center><img src="http://s1.wailian.download/2020/04/11/cover-62.png" alt="2020-4-11 23:23:52"/><blockquote><p>感谢您的阅读！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 心情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记</title>
      <link href="/2020/041139805.html"/>
      <url>/2020/041139805.html</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的基本概念"><a href="#数据库的基本概念" class="headerlink" title="数据库的基本概念"></a>数据库的基本概念</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 数据库的英文单词： DataBase 简称 ： DB</span><br><span class="line">2. 什么数据库？</span><br><span class="line">    * 用于存储和管理数据的仓库。</span><br><span class="line"></span><br><span class="line">3. 数据库的特点：</span><br><span class="line">    1. 持久化存储数据的。其实数据库就是一个文件系统</span><br><span class="line">    2. 方便存储和管理数据</span><br><span class="line">    3. 使用了统一的方式操作数据库 -- SQL</span><br></pre></td></tr></table></figure><h1 id="MySQL数据库软件"><a href="#MySQL数据库软件" class="headerlink" title="MySQL数据库软件"></a>MySQL数据库软件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1. 安装</span><br><span class="line">    * 参考百度</span><br><span class="line">2. 卸载</span><br><span class="line">    1. 去mysql的安装目录找到my.ini文件</span><br><span class="line">        * 复制 datadir&#x3D;&quot;C:&#x2F;ProgramData&#x2F;MySQL&#x2F;MySQL Server 5.5&#x2F;Data&#x2F;&quot;</span><br><span class="line">    2. 卸载MySQL</span><br><span class="line">    3. 删除C:&#x2F;ProgramData目录下的MySQL文件夹。</span><br><span class="line"></span><br><span class="line">3. 配置</span><br><span class="line">    * MySQL服务启动</span><br><span class="line">        1. 手动。</span><br><span class="line">        2. cmd--&gt; services.msc 打开服务的窗口</span><br><span class="line">        3. 使用管理员打开cmd</span><br><span class="line">            * net start mysql : 启动mysql的服务</span><br><span class="line">            * net stop mysql:关闭mysql服务</span><br><span class="line">    * MySQL登录</span><br><span class="line">        1. mysql -uroot -p密码</span><br><span class="line">        2. mysql -hip -uroot -p连接目标的密码</span><br><span class="line">        3. mysql --host&#x3D;ip --user&#x3D;root --password&#x3D;连接目标的密码</span><br><span class="line">    * MySQL退出</span><br><span class="line">        1. exit</span><br><span class="line">        2. quit</span><br><span class="line"></span><br><span class="line">    * MySQL目录结构</span><br><span class="line">        1. MySQL安装目录：basedir&#x3D;&quot;D:&#x2F;develop&#x2F;MySQL&#x2F;&quot;</span><br><span class="line">            * 配置文件 my.ini</span><br><span class="line">        2. MySQL数据目录：datadir&#x3D;&quot;C:&#x2F;ProgramData&#x2F;MySQL&#x2F;MySQL Server 5.5&#x2F;Data&#x2F;&quot;</span><br><span class="line">            * 几个概念</span><br><span class="line">                * 数据库：文件夹</span><br><span class="line">                * 表：文件</span><br><span class="line">                * 数据：数据</span><br></pre></td></tr></table></figure><h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.什么是SQL？</span><br><span class="line">    Structured Query Language：结构化查询语言</span><br><span class="line">    其实就是定义了操作所有关系型数据库的规则。每一种数据库操作的方式存在不一样的地方，称为“方言”。</span><br><span class="line"></span><br><span class="line">2.SQL通用语法</span><br><span class="line">    1. SQL 语句可以单行或多行书写，以分号结尾。</span><br><span class="line">    2. 可使用空格和缩进来增强语句的可读性。</span><br><span class="line">    3. MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。</span><br><span class="line">    4. 3 种注释</span><br><span class="line">        * 单行注释: -- 注释内容 或 # 注释内容(mysql 特有) </span><br><span class="line">        * 多行注释: &#x2F;* 注释 *&#x2F;</span><br><span class="line"></span><br><span class="line">3. SQL分类</span><br><span class="line">    1) DDL(Data Definition Language)数据定义语言</span><br><span class="line">        用来定义数据库对象：数据库，表，列等。关键字：create, drop,alter 等</span><br><span class="line">    2) DML(Data Manipulation Language)数据操作语言</span><br><span class="line">        用来对数据库中表的数据进行增删改。关键字：insert, delete, update 等</span><br><span class="line">    3) DQL(Data Query Language)数据查询语言</span><br><span class="line">        用来查询数据库中表的记录(数据)。关键字：select, where 等</span><br><span class="line">    4) DCL(Data Control Language)数据控制语言(了解)</span><br><span class="line">        用来定义数据库的访问权限和安全级别，及创建用户。关键字：GRANT， REVOKE 等</span><br></pre></td></tr></table></figure><hr><center><font face="楷体" size=4>【每日一图】</font></center><img src="http://s1.wailian.download/2020/04/11/cover-3.jpg" alt="2020年4月11日23:19:18"/><blockquote><p>感谢您的阅读！ </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写博客神器，速度收藏！</title>
      <link href="/2020/041047904.html"/>
      <url>/2020/041047904.html</url>
      
        <content type="html"><![CDATA[<p>完成了博客的搭建之后，接下来就是是内容创作了。而创作的过程中，我们又会有一系列的问题，比如：</p><ul><li>我们用什么工具来编写文章呢？</li><li>怎么才能快速生成格式化的Markdown表格？</li><li>怎么样才能画出一些高逼格的图片呢？</li><li>这些图片的存储和处理怎么办呢？文章中的代码高亮如何实现呢？</li></ul><p>要解决这些问题其实并不难，无非就是引入不同的工具来帮助我们，好的工具可以让我们的创作事半功倍！</p><h2 id="Markdown编辑器"><a href="#Markdown编辑器" class="headerlink" title="Markdown编辑器"></a>Markdown编辑器</h2><p>先来推荐一下我们要用的最重要的一个工具：Marddown编辑器。我们需要使用它来完成所有的创作内容，本人尝试了非常多的编辑器，最终锁定在下面这款Typora，因此推荐给大家。</p><ul><li>推荐工具：Typora</li><li>官方地址：<a href="https://www.typora.io/">https://www.typora.io/</a></li><li>推荐理由：作为一款免费编辑器，可以说是相当的良心，是我目前所知道的最好用的免费编辑器了，没有之一！！！它支持多个主流的操作系统，不论你是Windows用户还是Mac用户，都能轻易的安装和使用它！除此之外，它还有多种不同的主题选择、导出一些常用格式（PDF、Word、HTML）等等非常有用的功能！</li></ul><h2 id="Markdown表格生成器"><a href="#Markdown表格生成器" class="headerlink" title="Markdown表格生成器"></a>Markdown表格生成器</h2><p>对于强迫症来说，写Markdown表格是一件很痛苦的事情，在语法对齐的问题上我真的是受尽了折磨，所以强烈推荐一个在线Markdown表格生成工具，它除了能快速生成格式化后的Markdown表格外，还支持导入各种数据，在线编辑，简直强大！</p><ul><li>推荐工具：Table Convert Online</li><li>官方地址：<a href="https://tableconvert.com/">https://tableconvert.com/</a></li><li>推荐理由：作为一款免费在线工具，支持Excel、JSON、HTML、CSV甚至是从URL中提取HTML表格转为Markdown表格，多功能集一身，并且融合在一个界面，使用非常方便，不需要切换页面。还可以像编辑Excel一样编辑生成各种表格，不愧为表格中的瑞士军刀！</li></ul><h2 id="画图工具"><a href="#画图工具" class="headerlink" title="画图工具"></a>画图工具</h2><p>对于我们这些写技术文章的博主来说，画画流程图、架构图是辅助描述文章内容的最佳途径，下面要推荐的ProcessOn就是目前我用得最多的画图工具。</p><ul><li>推荐工具：ProcessOn</li><li>官方地址：<a href="https://www.processon.com/i/55d92963e4b0b89615a284e2">https://processon.com/</a></li><li>推荐理由：难得的国产在线图片编辑器，支持多人协作。同时，还有大量好看的图标支持，可以让我们的绘图更加生动！</li></ul><h2 id="图片存储"><a href="#图片存储" class="headerlink" title="图片存储"></a>图片存储</h2><p>可能有人会问，为什么要图片存储呢？我们直接存Wordpress或者Hexo的目录下不就好了吗？实际上，使用这些主要是为了经济性的考虑，随着访问量的增大，图片对于我们的虚拟主机或ECS的空间以及带宽消耗都会造成一定的压力，使用类似图床的平台可以帮我们减轻这些压力。</p><ul><li>推荐工具：外链工厂</li><li>官方地址：<a href="https://www.wailian.work/">https://www.wailian.work/</a></li><li>推荐理由：简单好用、足够稳定，释放自己虚拟空间或虚拟主机的存储和带宽消耗，但是记得做好备份哦！</li></ul><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><p>如果你跟我一样是一名程序猿，那么代码高亮是必备的。大多Hexo的主题中都包含了高亮插件，但是有些并没有，那么我们需要知道鼎鼎大名的hightlight.js。对于一些已经有这个插件的主题，也可以通过官网来做一些定制，没有的直接引入来使用即可。</p><ul><li>推荐工具：hightlight.js</li><li>官方地址：<a href="https://highlightjs.org/">https://highlightjs.org/</a></li><li>推荐理由：适用于所有主流编程语言，兼容性好，多种多样的预设样式，总有一款适合你！</li></ul><p><img src="http://s1.wailian.download/2020/04/11/cover-64.png" alt="cover-64.png"></p><blockquote><p>这么多款工具，总有一款适合你，速度收藏吧。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi，你好！</title>
      <link href="/2020/040930850.html"/>
      <url>/2020/040930850.html</url>
      
        <content type="html"><![CDATA[<h2 id="春看百花冬看雪，醒亦念卿，梦亦念卿！"><a href="#春看百花冬看雪，醒亦念卿，梦亦念卿！" class="headerlink" title="春看百花冬看雪，醒亦念卿，梦亦念卿！"></a>春看百花冬看雪，醒亦念卿，梦亦念卿！</h2><h2 id="晓看天色暮看云，行也思君，坐也思君！"><a href="#晓看天色暮看云，行也思君，坐也思君！" class="headerlink" title="晓看天色暮看云，行也思君，坐也思君！"></a>晓看天色暮看云，行也思君，坐也思君！</h2><p><img src="http://s1.wailian.download/2020/04/11/cover-5.jpg" alt="cover-5.jpg"></p><h3 id="最近还好吗"><a href="#最近还好吗" class="headerlink" title="最近还好吗!"></a><font face="华文行楷">最近还好吗!</font></h3>]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
